@startuml CU_REG_RES
!include https://raw.githubusercontent.com/ptrkcsk/one-dark-plantuml-theme/v1.0.0/theme.puml
' !include https://raw.githubusercontent.com/bschwarz/puml-themes/master/themes/cyborg-outline/puml-theme-cyborg-outline.puml
' !include https://raw.githubusercontent.com/future-architect/puml-themes/master/themes/puml-theme-vibrant.puml
' !include https://raw.githubusercontent.com/bschwarz/puml-themes/master/themes/cyborg-outline/puml-theme-cyborg-outline.puml

actor "logueado:Huesped" as HUE
control "RegistroReservaView" as VIEW
participant "RegResForm" as FORM
entity ":Cab" as CAB
entity "slug:Cab" as ACAB
entity "deCabaÃ±a:Rango" as RANGO
entity "deReserva:Reserva" as RESERVA
entity "Estado" as ESTADO 
note over of VIEW: GRASP - Controlador
HUE -> VIEW: http Request GET(slug, request)
VIEW -> FORM: new(slug)
loop 
    VIEW -> CAB: get(slug=slug)
end
VIEW -> ACAB: get_costo_por_noche()
VIEW -> ACAB: get_fechas_hab_y_des()
note right of FORM: GRASP - Experto
ACAB -> ACAB: get_fechas_habilitadas()
loop
    ACAB -> RANGO: get_fecha_inicio()
    ACAB -> RANGO: get_fecha_fin()
end
ACAB -> ACAB: get_fechas_deshabilitadas()
loop
    ACAB -> RESERVA: get_fecha_inicio()
    ACAB -> RESERVA: get_fecha_fin()
end
VIEW -> VIEW: parse_fecha_actual()
VIEW -> VIEW: render(request, template, context)
VIEW -> HUE: http Response(reg_res.html, staticfiles)
HUE -> VIEW: http Request POST(fecha_desde, fecha_hasta, cant_adultos, cant_menores)
VIEW -> FORM: new(slug, POST data)
VIEW -> FORM: is_valid()
FORM -> FORM: clean(POST data)
VIEW -> FORM: get_cleaned_fechaDesdeHasta()
VIEW -> VIEW: parse_picker_input()
VIEW -> FORM: get_cleaned_cantAdultos()
VIEW -> FORM: get_cleaned_cantMenores()
VIEW -> ACAB: crear_reserva(datos_reserva)
note right of ACAB: GRASP - Creador
create entity "nueva:Reserva" as NRES 
ACAB -> NRES: new(datos_reserva)
ACAB -> NRES: set_precio_final()
NRES -> NRES: calcular_precio_final()
ACAB -> NRES: set_estado('Pte Confirmacion')
loop
    NRES -> ESTADO: get(nombre='Pte Confirmacion')
end
create entity "nuevo:CambioEstado" as NCE
NRES -> NCE: new(reserva, estado)
ACAB -> NRES: send_mail_enc_res()
VIEW -> HUE: http ResponseRedirect (res-det)
@enduml

@startuml DDC_REG_RES
!include https://raw.githubusercontent.com/ptrkcsk/one-dark-plantuml-theme/v1.0.0/theme.puml

class RegistroReservaView <<control>> {
    model
    template_name
    form_class
    permission_required
    get()
    post()
    parse_fecha_actual()
    parse_picker_input()
}

class RegResForm {
    fechaDesdeHasta
    cantAdultos
    cantMenores
    new()
    is_valid()
    clean()
    clean_fechaDesdeHasta()
    get_cleaned_cantAdultos()
    get_cleaned_cantMenores()
}

abstract class Form {
    clean()
}

class Cab <<entity>> {
    nombre
    cantHabitaciones
    costoPorNoche
    slug
    get()
    get_costo_por_noche()
    get_fechas_hab_y_des()
    get_fechas_habilitadas()
    get_fechas_deshabilitadas()
    crear_reserva()

}
class Rango <<entity>> {
    fechaDesde
    fechaHasta
    get_fecha_inicio()
    get_fecha_fin()
}
class Reserva <<entity>> {
    fechaDesde
    fechaHasta
    fechaReserva
    precioFinal
    cantAdultos
    cantMenores
    get_fecha_inicio()
    get_fecha_fin()
    new()
    set_precio_final()
    calcular_precio_final()
    set_estado()
    send_mail_enc_res()
}

class CambioEstado <<entity>> {
    fechaInicio
    fechaFin
    new()
}

class Estado <<entity>> {
    nombre
    ambito
    get()
}

RegistroReservaView -[dotted]-> Cab
RegistroReservaView -[dotted]l-> RegResForm

Cab --> "0..*" Rango: rangos
Cab --> "0..*" Reserva: reservas
Cab -[dotted]-> Estado
Cab --> "1..*" CambioEstado : cambios_estado
CambioEstado -r-> "1" Estado

View <|-l- RegistroReservaView
Form <|-u- RegResForm
Model <|-u- Cab
Model <|-u- Rango
Model <|-u- Estado
Model <|-u- CambioEstado

@enduml